=head2 SYNOPSIS

 PACKAGE NAME: 

 AUTHOR:  

 DATE:

 DESCRIPTION:

 Version:

=head2 USE

=head3 NOTES

=head4 Examples

=head2 SYNOPSIS

=head3 SEISMIC UNIX NOTES

=head2 CHANGES and their DATES

=cut


	use Moose;
	use SeismicUnix qw ($in $out $on $go $to $suffix_ascii $off $suffix_su);
	use Project_config;

	my $Project		= new Project_config();
	my $DATA_SEISMIC_SU	= $Project->DATA_SEISMIC_SU;
	my $DATA_SEISMIC_BIN	= $Project->DATA_SEISMIC_BIN;

	use message;
	use flow;
	use sunix::makevel;

	my $log					= new message();
	my $run					= new flow();
	my $makevel				= new makevel();


=head2 Declare

	local variables

=cut

	my (@flow);
	my (@items);
	my (@makevel);

=head2 Set up

	makevel parameter values

=cut

	$makevel				->clear();
	$makevel				->dlens(quotemeta(0.0));
	$makevel				->dvdx(quotemeta(0.0));
	$makevel				->dvdy(quotemeta(0.0));
	$makevel				->dvdz(quotemeta(0.0));
	$makevel				->dx(quotemeta(1.0));
	$makevel				->dy(quotemeta(1.0));
	$makevel				->dz(quotemeta(1.0));
	$makevel				->exc(quotemeta(1.0));
	$makevel				->fx(quotemeta(0.0));
	$makevel				->fy(quotemeta(0.0));
	$makevel				->fz(quotemeta(0.0));
	$makevel				->ny(quotemeta(1));
	$makevel				->tlens(quotemeta(0.0));
	$makevel				->v000(quotemeta(2.0));
	$makevel				->vlens(quotemeta(0.0));
	$makevel				->vran(quotemeta(0.0));
	$makevel				->vzc(quotemeta(0.0));
	$makevel				->vzran(quotemeta(0.0));
	$makevel[1] 			= $makevel->Step();


=head2 DEFINE FLOW(s) 


=cut

	 @items	= (
		  $makevel[1],
		  $go
		  );
	$flow[1] = $run->modules(\@items);


=head2 RUN FLOW(s) 


=cut

	$run->flow(\$flow[1]);



=head2 LOG FLOW(s)

	to screen and FILE

=cut

	print $flow[1];

	$log->file($flow[1]);


