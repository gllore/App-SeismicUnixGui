=head2 SYNOPSIS

 PACKAGE NAME: 

 AUTHOR:  

 DATE:

 DESCRIPTION:

 Version:

=head2 USE

=head3 NOTES

=head4 Examples

=head2 SYNOPSIS

=head3 SEISMIC UNIX NOTES

=head2 CHANGES and their DATES

=cut


	use Moose;
	use SeismicUnix qw ($in $out $on $go $to $suffix_ascii $off $suffix_su);
	use Project_config;

	my $Project		= new Project_config();
	my $DATA_SEISMIC_SU	= $Project->DATA_SEISMIC_SU;
	my $DATA_SEISMIC_BIN	= $Project->DATA_SEISMIC_BIN;

	use message;
	use flow;
	use data_in;
	use sunix::xgraph;

	my $log					= new message();
	my $run					= new flow();
	my $data_in				= new data_in();
	my $xgraph				= new xgraph();


=head2 Declare

	local variables

=cut

	my (@flow);
	my (@items);
	my (@data_in);
	my (@xgraph);

=head2 Set up

	data_in parameter values

=cut

	$data_in				->clear();
	$data_in				->base_file_name(quotemeta('velocity'));
	$data_in				->suffix_type(quotemeta('bin'));
	$data_in[1] 			= $data_in->Step();

=head2 Set up

	xgraph parameter values

=cut

	$xgraph				->clear();
	$xgraph				->box_X0(quotemeta(300));
	$xgraph				->box_Y0(quotemeta(50));
	$xgraph				->box_height(quotemeta(300));
	$xgraph				->box_width(quotemeta(240));
	$xgraph				->dt(quotemeta(1));
	$xgraph				->grid1_type(quotemeta('dot'));
	$xgraph				->grid2_type(quotemeta('dash'));
	$xgraph				->gridColor(quotemeta(4));
	$xgraph				->num_points(quotemeta(2001));
	$xgraph				->format(quotemeta(0));
	$xgraph				->reverse(quotemeta(0));
	$xgraph				->orientation(quotemeta('seismic'));
	$xgraph				->title(quotemeta('velocity'));
	$xgraph				->windowtitle(quotemeta('Xdemo1 (JS)'));
	$xgraph				->x2_min(quotemeta(1000));
	$xgraph				->x2_max(quotemeta(5000));
	$xgraph				->x_label(quotemeta('velocity (m/s)'));
	$xgraph				->y_label(quotemeta('depth (m)'));
	$xgraph[1] 			= $xgraph->Step();


=head2 DEFINE FLOW(s) 


=cut

	 @items	= (
		  $xgraph[1], $in,
		  $data_in[1],
		  $go
		  );
	$flow[1] = $run->modules(\@items);


=head2 RUN FLOW(s) 


=cut

	$run->flow(\$flow[1]);



=head2 LOG FLOW(s)

	to screen and FILE

=cut

	print $flow[1];

	$log->file($flow[1]);


