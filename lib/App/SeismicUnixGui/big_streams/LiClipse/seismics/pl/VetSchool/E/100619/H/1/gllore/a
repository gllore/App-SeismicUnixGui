=head2 SYNOPSIS

PERL PROGRAM NAME: 

AUTHOR:

DATE: Thu Jul  4 12:47:08 2024 

DESCRIPTION:

Built using Version: SeismicUnixGui V0.87.1 



=head2 USE

=head3 NOTES

=head4 Examples

=head2 SYNOPSIS

=head3 SEISMIC UNIX NOTES

=head2 CHANGES and their DATES

=cut


	use Moose;
	use App::SeismicUnixGui::misc::SeismicUnix qw($in $out $on $go $to $suffix_ascii $off $suffix_segd $suffix_segy $suffix_sgy $suffix_su $suffix_segd $suffix_txt $suffix_bin);
	use aliased 'App::SeismicUnixGui::configs::big_streams::Project_config';

	my $Project		        = Project_config->new();
	my $DATA_SEISMIC_BIN	= $Project->DATA_SEISMIC_BIN();
	my $DATA_SEISMIC_SEGD	= $Project->DATA_SEISMIC_SEGD();
	my $DATA_SEISMIC_SEGY	= $Project->DATA_SEISMIC_SEGY();
	my $DATA_SEISMIC_SU	    = $Project->DATA_SEISMIC_SU();
	my $DATA_SEISMIC_TXT	= $Project->DATA_SEISMIC_TXT();
	my $PL_SEISMIC	        = $Project->PL_SEISMIC();

	use aliased 'App::SeismicUnixGui::misc::message';
	use aliased 'App::SeismicUnixGui::misc::flow';
	use aliased 'App::SeismicUnixGui::sunix::data::data_in';

	my $log					= message->new();
	my $run					= flow->new();
	my $data_in				= data_in->new();


=head2 Declare

	local variables

=cut

	my (@flow);
	my (@items);
	my (@data_in);

=head2 Set up

	data_in parameter values

=cut

 	 $data_in 	 	 	 	 ->clear();
 	 $data_in [1]  	 	 	 = $data_in ->Step();


=head2 DEFINE FLOW(s) 


=cut

	 @items	= (
		  $data_in[1],
		  $go
		  );
	$flow[1] = $run->modules(\@items);


=head2 RUN FLOW(s) 


=cut

	$run->flow(\$flow[1]);



=head2 LOG FLOW(s)

	to screen and FILE

=cut

	$log->screen($flow[1]);

	$log->time();
	$log->file($flow[1]);


