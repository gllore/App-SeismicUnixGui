 SUK1K2FILTER - symmetric box-like K-domain filter defined by the	
		  cartesian product of two sin^2-tapered polygonal	
		  filters defined in k1 and k2				

     suk1k2filter <infile >outfile [optional parameters]		

 Optional parameters:							
 k1=val1,val2,...	array of K1 filter wavenumbers			
 k2=val1,val2,...	array of K2 filter wavenumbers			
 amps1=a1,a2,...	array of K1 filter amplitudes			
 amps2=a1,a2,...	array of K2 filter amplitudes			
 d1=tr.d1 or 1.0	sampling interval in first (fast) dimension	
 d2=tr.d1 or 1.0	sampling interval in second (slow) dimension	
 quad=0		=0 all four quandrants				
			=1 (quadrants 1 and 4) 				
			=2 (quadrants 2 and 3) 				

 Defaults:								
 k1=.10*(nyq1),.15*(nyq1),.45*(nyq1),.50*(nyq1)			
 k2=.10*(nyq2),.15*(nyq2),.45*(nyq2),.50*(nyq2)			
 amps1=0.,1.,...,1.,0.  trapezoid-like bandpass filter			
 amps2=0.,1.,...,1.,0.  trapezoid-like bandpass filter			

 The nyquist wavenumbers, nyq1 and nyq2, are computed internally.	

 verbose=0	verbose = 1 echoes information				

 tmpdir= 	 if non-empty, use the value as a directory path	
		 prefix for storing temporary files; else if the	
	         the CWP_TMPDIR environment variable is set use		
	         its value for the path; else use tmpfile()		

 Notes:								
 The filter is assumed to be symmetric, to yield real output		

 Because the data are assumed to be purely spatial (i.e. non-seismic), 
 the data are assumed to have trace id (30), corresponding to (z,x) data

 The relation: w = 2 pi F is well known for frequency, but there	
 doesn't seem to be a commonly used letter corresponding to F for the	
 spatial conjugate transform variables.  We use K1 and K2 for this.	
 More specifically we assume a phase:					
		-i(k1 x1 + k2 x2) = -2 pi i(K1 x1 + K2 x2).		
 and K1, K2 define our respective wavenumbers.				


 Credits:
     CWP: John Stockwell, November 1995.

 Trace header fields accessed: ns, d1, d2

