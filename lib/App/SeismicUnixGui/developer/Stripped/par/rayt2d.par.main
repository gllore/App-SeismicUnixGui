 RAYT2D - traveltime Tables calculated by 2D paraxial RAY tracing	

     rayt2d vfile= tfile= [optional parameters]			

 Required parameters:							
 vfile=stdin		file containning velocity v[nx][nz]		
 tfile=stdout		file containning traveltime tables		
			t[nxs][nxo][nzo]				

 Optional parameters							
 dt=0.008		time sample interval in ray tracing		
 nt=401		number of time samples in ray tracing		

 fz=0			first depth sample in velocity			
 nz=101		number of depth samples in velocity		
 dz=100		depth interval in velocity			
 fx=0			first lateral sample in velocity		
 nx=101		number of lateral samples in velocity		
 dx=100		lateral interval in velocity			

 fzo=fz		first depth sample in traveltime table		
 nzo=nz		number of depth samples in traveltime table	
 dzo=dz		depth interval in traveltime table		
 fxo=fx		first lateral sample in traveltime table	
 nxo=nx		number of lateral samples in traveltime table	
 dxo=dx		lateral interval in traveltime table		

 surf="0,0;99999,0"  Recording surface "x1,z1;x2,z2;x3,z3;...
 fxs=fx		x-coordinate of first source			
 nxs=1			number of sources				
 dxs=2*dxo		x-coordinate increment of sources		
 aperx=0.5*nx*dx  	ray tracing aperature in x-direction		

 fa=-60		first take-off angle of rays (degrees)		
 na=61			number of rays  				
 da=2			increment of take-off angle  			
 amin=0		minimum emergence angle 			
 amax=90		maximum emergence angle 			

 fac=0.01		factor to determine radius for extrapolation	
 ek=1			flag of implementing eikonal in shadow zones 	
 ms=10			print verbal information at every ms sources	
 restart=n		job is restarted (=y yes; =n no)		
 npv=0			flag of computing quantities for velocity analysis
 if npv>0 specify the following three files				
 pvfile=pvfile		input file of velocity variation pv[nxo][nzo]	
 tvfile=tvfile		output file of traveltime variation tables  	
			tv[nxs][nxo][nzo]				
 csfile=csfile		output file of cosine tables cs[nxs][nxo][nzo]	

 Notes:								
 1. Each traveltime table is calculated by paraxial ray tracing; then 	
    traveltimes in shadow zones are compensated by solving eikonal	
    equation.								
 2. Input velocity is uniformly sampled and smooth one preferred.	
 3. Traveltime table and source ranges must be within velocity model.	
 4. Ray tracing aperature can be chosen as sum of migration aperature	
    plus half of maximum offset.					
 5. Memory requirement for this program is about			
      [nx*nz+4*mx*nz+3*nxo*nzo+na*(nx*nz+mx*nz+3*nxo*nzo)]*4 bytes	
    where mx = min(nx,2*(1+aperx/dx)).					


 Author:  Zhenyue Liu, 10/11/94,  Colorado School of Mines 

          Trino Salinas, 01/01/96 included the option to handle nonflat
          reference surfaces.
          Subroutines from Dave Hale's modeling library were adapted in
          this code to define topography using cubic splines.

 References:

 Beydoun, W. B., and Keho, T. H., 1987, The paraxial ray method:
   Geophysics, vol. 52, 1639-1653.

 Cerveny, V., 1985, The application of ray tracing to the numerical
   modeling of seismic wavefields in complex structures, in Dohr, G.,
   ED., Seismic shear waves (part A: Theory): Geophysical Press,
   Number 15 in Handbook of Geophysical Exploration, 1-124.
 

